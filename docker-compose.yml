services:
  postgres:
    image: postgres:15
    container_name: user-management-postgres
    environment:
      POSTGRES_DB: authDB
      POSTGRES_USER: postgres
      POSTGRES_PASSWORD: adminadmin
    ports:
      - "5432:5432"
    volumes:
      - postgres_data:/var/lib/postgresql/data
    networks:
      - user-management-network

  # rabbitmq:
  #   image: rabbitmq:3-management-alpine
  #   container_name: user-management-rabbitmq
  #   environment:
  #     RABBITMQ_DEFAULT_USER: admin
  #     RABBITMQ_DEFAULT_PASS: admin
  #   ports:
  #     - "5672:5672"
  #     - "15672:15672"
  #   volumes:
  #     - rabbitmq_data:/var/lib/rabbitmq
  #   networks:
  #     - user-management-network

  auth-service:
    build:
      context: ./auth-service
      dockerfile: Dockerfile
    container_name: auth-service
    ports:
      - "3001:3001"
    env_file:
      - ./auth-service/.env
    environment:
      - NODE_ENV=production
      - DATABASE_URL=postgresql://postgres:adminadmin@postgres:5432/authDB
      # - RABBITMQ_URL=amqp://admin:admin@rabbitmq:5672
    depends_on:
      - postgres
      # - rabbitmq
    networks:
      - user-management-network
    restart: unless-stopped

  invite-service:
    build:
      context: ./invite-service
      dockerfile: Dockerfile
    container_name: invite-service
    ports:
      - "3002:3002"
    env_file:
      - ./invite-service/.env
    environment:
      - NODE_ENV=production
      - DATABASE_URL=postgresql://postgres:adminadmin@postgres:5432/authDB
      # - RABBITMQ_URL=amqp://admin:admin@rabbitmq:5672
    depends_on:
      - postgres
      # - rabbitmq
    networks:
      - user-management-network
    restart: unless-stopped

  # notification-service:
  #   build:
  #     context: ./notification-service
  #     dockerfile: Dockerfile
  #   container_name: notification-service
  #   ports:
  #     - "3003:3000"
  #   environment:
  #     - NODE_ENV=production
  #     - DATABASE_URL=postgresql://postgres:postgres@postgres:5432/user_management
  #     - RABBITMQ_URL=amqp://admin:admin@rabbitmq:5672
  #   depends_on:
  #     - postgres
  #     - rabbitmq
  #   networks:
  #     - user-management-network
  #   restart: unless-stopped

volumes:
  postgres_data:
    external: true
    name: 55aed6037d31404239a06513433ad66111239e90825ba0c9bc4f09351658f035
  # rabbitmq_data:

networks:
  user-management-network:
    driver: bridge
