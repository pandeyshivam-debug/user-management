generator client {
    provider = "prisma-client-js"
}

datasource db {
    provider = "postgresql"
    url = env("DATABASE_URL")
}

enum Role {
    SUPER_ADMIN
    SITE_ADMIN
    OPERATOR
    CLIENT_ADMIN
    CLIENT_USER
}

model User {
    id          String      @id @default(uuid())
    email       String      @unique
    phone       String?     @unique
    name        String
    password    String
    isVerified  Boolean     @default(false)
    role        Role        @default(CLIENT_USER)
    totpSecret  String?
    createdAt   DateTime    @default(now())
    updatedAt   DateTime    @updatedAt

    otps            otp[]
    invitations     Invitation[] @relation("InvitedBy")
    refreshTokens   RefreshToken[]
}

model Invitation {
    id         String   @id @default(uuid())
    email      String
    invitedBy  String
    Inviter    User     @relation("InvitedBy", fields: [invitedBy], references: [id])
    role       Role
    used       Boolean  @default(false)
    token      String   @unique
    expiresAt  DateTime
    createdAt  DateTime @default(now())
}

model RefreshToken {
    id           String   @id @default(uuid())
    userId       String
    User         User     @relation(fields: [userId], references: [id])
    tokenHash    String
    revoked      Boolean  @default(false)
    createdAt    DateTime @default(now())
    expiresAt    DateTime
    replacedById String?
}

model otp {
    id        Int      @id @default(autoincrement())
    userId    String
    User      User     @relation(fields: [userId], references: [id])
    code      String
    type      String
    used      Boolean  @default(false)
    expiresAt DateTime
    createdAt DateTime @default(now())
}